// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAirport.Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MyAirport.Migrations
{
    [DbContext(typeof(MyAirportContext))]
    [Migration("20210514130042_CodeForAirports")]
    partial class CodeForAirports
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MyAirport.Models.Airport", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Code")
                        .HasName("pk_airports");

                    b.ToTable("airports");
                });

            modelBuilder.Entity("MyAirport.Models.Flight", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ArrivalCode1")
                        .HasColumnType("text")
                        .HasColumnName("arrival_code1");

                    b.Property<string>("ArrivalCodeCode")
                        .HasColumnType("text")
                        .HasColumnName("arrival_code_code");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.Property<string>("DepartureCode1")
                        .HasColumnType("text")
                        .HasColumnName("departure_code1");

                    b.Property<string>("DepartureCodeCode")
                        .HasColumnType("text")
                        .HasColumnName("departure_code_code");

                    b.Property<int>("PlacesCount")
                        .HasColumnType("integer")
                        .HasColumnName("places_count");

                    b.Property<int>("ReservedPlaces")
                        .HasColumnType("integer")
                        .HasColumnName("reserved_places");

                    b.HasKey("ID")
                        .HasName("pk_flights");

                    b.HasIndex("ArrivalCode1")
                        .HasDatabaseName("ix_flights_arrival_code1");

                    b.HasIndex("ArrivalCodeCode")
                        .HasDatabaseName("ix_flights_arrival_code_code");

                    b.HasIndex("DepartureCode1")
                        .HasDatabaseName("ix_flights_departure_code1");

                    b.HasIndex("DepartureCodeCode")
                        .HasDatabaseName("ix_flights_departure_code_code");

                    b.ToTable("flights");
                });

            modelBuilder.Entity("MyAirport.Models.Flight", b =>
                {
                    b.HasOne("MyAirport.Models.Airport", "Arrival")
                        .WithMany()
                        .HasForeignKey("ArrivalCode1")
                        .HasConstraintName("fk_flights_airports_arrival_code1");

                    b.HasOne("MyAirport.Models.Airport", "ArrivalCode")
                        .WithMany()
                        .HasForeignKey("ArrivalCodeCode")
                        .HasConstraintName("fk_flights_airports_arrival_code_code");

                    b.HasOne("MyAirport.Models.Airport", "Departure")
                        .WithMany()
                        .HasForeignKey("DepartureCode1")
                        .HasConstraintName("fk_flights_airports_departure_code1");

                    b.HasOne("MyAirport.Models.Airport", "DepartureCode")
                        .WithMany()
                        .HasForeignKey("DepartureCodeCode")
                        .HasConstraintName("fk_flights_airports_departure_code_code");

                    b.Navigation("Arrival");

                    b.Navigation("ArrivalCode");

                    b.Navigation("Departure");

                    b.Navigation("DepartureCode");
                });
#pragma warning restore 612, 618
        }
    }
}
